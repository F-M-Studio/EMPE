name: Build and Release

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Ninja
        run: choco install ninja

      - name: Setup Visual Studio Environment
        uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: amd64

      - name: Setup Qt with Required Modules
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.8.2
          host: windows
          target: desktop
          arch: win64_msvc2022_64
          modules: qtcharts qtserialport

      - name: Debug Qt Installation
        run: |
          echo "Qt installed at: ${{ env.Qt6_DIR }}"
          ls -R "${{ env.Qt6_DIR }}"

      - name: Verify Qt Modules
        run: |
          ls -R "${{ env.Qt6_DIR }}/lib/cmake"

      - name: Configure CMake
        run: |
          cmake --fresh -G Ninja -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH="C:/Qt/6.8.2/msvc2022_64"

      - name: Build
        run: cmake --build build --config ${{env.BUILD_TYPE}} --parallel $env:NUMBER_OF_PROCESSORS

      - name: Deploy Qt Dependencies
        run: |
          "${{ env.Qt6_DIR }}/bin/windeployqt.exe" --release --verbose 2 --dir build build/lidar.exe

      - name: Manually Copy Qt DLLs
        run: |
          cp "C:/Qt/6.8.2/msvc2022_64/bin/Qt6Core.dll" build/
          cp "C:/Qt/6.8.2/msvc2022_64/bin/Qt6Gui.dll" build/
          cp "C:/Qt/6.8.2/msvc2022_64/bin/Qt6Widgets.dll" build/

      - name: Run tests
        run: ctest --test-dir build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build
